from email import message
import logging
import time
import disnake as discord
from disnake.ext.commands.core import command
import requests
import json
import time
import random
import os
import asyncio
import fileinput

from disnake.ext import commands
from disnake import Member
from disnake import utils
from disnake.utils import get
from disnake.ext.commands import Bot
from disnake import Embed


from os import system
from config import config

from musicbot.commands.general import General
from musicbot.commands.music import Music




dir_path = os.path.dirname(os.path.realpath(__file__))

class MyCommands(commands.Cog):
    """–ù–∞–±–æ—Ä —Å–∞–º–æ–ø–∏—Å–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥.

        –ê—Ç—Ç—Ä–∏–±—É—Ç—ã:
            bot: –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã

    """

    def __init__(self, bot):
        self.bot = bot
        self.path = '{}/playlists/playlists.txt'.format(dir_path)
        self.path_PL = '{}/playlists/PL_NAMES.txt'.format(dir_path)
    



    @commands.command(name='cl', description=config.HELP_CLEAR_LONG, help=config.HELP_CLEAR_SHORT) #–û—á–∏—Å—Ç–∫–∞ –∫–∞–Ω–∞–ª–∞ .cl [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π] (–æ—á–∏—Å—Ç–∏—Ç—å –Ω—É–∂–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π)// !clear (—á–∏—Å—Ç–∏—Ç 100 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π).
    async def _clear(self, ctx, amount = 100):
        await ctx.channel.purge(limit = amount + 1)



    @commands.command(name="help", description=config.HELP_CMD_LONG, help=config.HELP_CMD_SHORT, aliases=['cmd']) #–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥! !commands
    async def _cmd(self, ctx):
        await ctx.channel.purge(limit=1)
        pages = 4

        emb = discord.Embed(colour=0xf57114, title='üîò–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ãüîò', description=f"*1/{pages}*")
        emb.add_field(name='`!help`', value=config.HELP_CMD_LONG)
        emb.add_field(name='`!suck`', value=config.HELP_SUCK_LONG)
        emb.add_field(name='`!hello`', value=config.HELP_HELLO_LONG)
        emb.add_field(name='`!ping`', value=config.HELP_PING_LONG)
        emb.add_field(name='`!cl`', value=config.HELP_CL_LONG)
        emb.add_field(name='`!roleinfo`', value=config.HELP_ROLEINFO_LONG)
        emb.add_field(name='`!flip`', value=config.HELP_FLIP_LONG)
        emb.add_field(name='`!roll`', value=config.HELP_ROLL_LONG)
        emb.add_field(name='`!dm`', value=config.HELP_DIRECT_LONG)

        emb1 = discord.Embed(colour=0xf57114, title='üîò–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ãüîò', description=f"*2/{pages}*")
        emb1.add_field(name='!bigletters', value=config.HELP_BL_LONG)
        
        emb2 = discord.Embed(colour=0xf57114, title='üéµ–ú—É–∑—ã–∫–∞üéµ', description=f"*3/{pages}*")
        emb2.add_field(name='`!cc`', value=config.HELP_CHANGECHANNEL_LONG)
        emb2.add_field(name='`!play`', value=config.HELP_YT_LONG)
        emb2.add_field(name='`!pause`', value=config.HELP_PAUSE_LONG)
        emb2.add_field(name='`!resume`', value=config.HELP_RESUME_LONG)
        emb2.add_field(name='`!skip`', value=config.HELP_SKIP_LONG)
        emb2.add_field(name='`!shuffle`', value=config.HELP_SHUFFLE_LONG)
        emb2.add_field(name='`!loop`', value=config.HELP_LOOP_LONG)
        emb2.add_field(name='`!stop`', value=config.HELP_STOP_LONG)
        emb2.add_field(name='`!queue`', value=config.HELP_QUEUE_LONG)

        emb3 = discord.Embed(colour=0xf57114, title='üéµ–ú—É–∑—ã–∫–∞üéµ', description=f"*4/{pages}*")
        emb3.add_field(name='`!songinfo`', value=config.HELP_SONGINFO_LONG)
        emb3.add_field(name='`!clear`', value=config.HELP_CLEAR_LONG)
        emb3.add_field(name='`!history`', value=config.HELP_HISTORY_LONG)
        
        """
        emb3 = discord.Embed(colour=0xf57114, title='–ö–æ–º–∞–Ω–¥—ã', description=f"*4/{pages}*")
        emb3.add_field(name='!lol', value=config.HELP_CMD_SHORT)
        emb3.add_field(name='!lol', value='–ü–æ—à–ª–∏ –∫–æ–≥–æ-—Ç–æ! [!suck @{nickname}]')
        emb3.add_field(name='!lol', value='–ü–æ–∑–¥–æ—Ä–æ–≤–∞–π—Å—è —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º! !hello @nickname')
        emb3.add_field(name='!ping', value='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∏–Ω–≥')
        emb3.add_field(name='!clear', value='–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç [!clear {–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–æ–æ–±—â–µ–Ω–∏–π} –∏–ª–∏ !clear]')
        emb3.add_field(name='!roleinfo', value='–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏ [!roleinfo –Ω–∞–∑–≤–∞–Ω–∏–µ_—Ä–æ–ª–∏]')
        emb3.add_field(name='!flip', value='–ö–∏–¥–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É (–û—Ä–µ–ª –∏–ª–∏ –†–µ—à–∫–∞)')
        emb3.add_field(name='!roll', value='–í—ã–¥–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ [!roll (0-100), !roll {—á–∏—Å–ª–æ} (0-{—á–∏—Å–ª–æ})]')
        emb3.add_field(name='!dm', value='–ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –≤ –õ–° [!dm @nickname {—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è}')

        emb4 = discord.Embed(colour=0xf57114, title='–ö–æ–º–∞–Ω–¥—ã', description=f"*5/{pages}*")
        emb4.add_field(name='!lol', value=config.HELP_CMD_SHORT)
        emb4.add_field(name='!lol', value='–ü–æ—à–ª–∏ –∫–æ–≥–æ-—Ç–æ! [!suck @{nickname}]')
        emb4.add_field(name='!lol', value='–ü–æ–∑–¥–æ—Ä–æ–≤–∞–π—Å—è —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º! !hello @nickname')
        emb4.add_field(name='!ping', value='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∏–Ω–≥')
        emb4.add_field(name='!clear', value='–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç [!clear {–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–æ–æ–±—â–µ–Ω–∏–π} –∏–ª–∏ !clear]')
        emb4.add_field(name='!roleinfo', value='–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏ [!roleinfo –Ω–∞–∑–≤–∞–Ω–∏–µ_—Ä–æ–ª–∏]')
        emb4.add_field(name='!flip', value='–ö–∏–¥–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É (–û—Ä–µ–ª –∏–ª–∏ –†–µ—à–∫–∞)')
        emb4.add_field(name='!roll', value='–í—ã–¥–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ [!roll (0-100), !roll {—á–∏—Å–ª–æ} (0-{—á–∏—Å–ª–æ})]')
        emb4.add_field(name='!dm', value='–ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –≤ –õ–° [!dm @nickname {—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è}')
        """
        contents = [emb, emb1, emb2, emb3]
        cur_page = 0
        msg = await ctx.send(embed=emb)
        await msg.add_reaction('‚óÄÔ∏è')
        await msg.add_reaction('‚ñ∂Ô∏è')

        def check(reaction, user: discord.Member):
            return user == ctx.message.author and str(reaction.emoji) in ['‚óÄÔ∏è', '‚ñ∂Ô∏è']
        
        while True:
            try:
                reaction, user = await self.bot.wait_for('reaction_add', timeout=60, check=check)

                if str(reaction.emoji) == '‚ñ∂Ô∏è' and cur_page != pages-1:
                    cur_page += 1
                    await msg.edit(embed=contents[cur_page])
                    await msg.remove_reaction(reaction, user)

                elif str(reaction.emoji) == '‚óÄÔ∏è' and cur_page > 0:
                    cur_page -= 1
                    await msg.edit(embed=contents[cur_page])
                    await msg.remove_reaction(reaction, user)

                else:
                    await msg.remove_reaction(reaction, user)
                        
            except asyncio.TimeoutError:
                await msg.delete()
                break
            
        
        


    @commands.command()
    async def _check(self, ctx):
        bot_channel = ctx.guild.voice_client.channel
        print(bot_channel)
        author_channel = ctx.author.voice.channel
        print(author_channel)
        author_channel_msg = ctx.message.author.voice
        print(author_channel_msg)



    @commands.command(name='suck', description=config.HELP_SUCK_LONG, help=config.HELP_SUCK_SHORT, aliases=['fuck'])
    async def _suck(self, ctx, member: Member):
        await ctx.channel.purge(limit=1)
        await ctx.send(f'{member.mention}, —Å–æ—Å–∏ —Ö—É–π! :middle_finger:', tts=True) 


    @commands.command(name='hello', description=config.HELP_HELLO_LONG, help=config.HELP_HELLO_SHORT, aliases=['hi', '–ø—Ä–∏–≤–µ—Ç', 'qq']) #–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ !hello
    async def _hello(self, ctx, member:Member,):
        await ctx.channel.purge(limit=1)
        author=ctx.message.author
        await ctx.send(f"{member.mention}, –í–∞–º –ø—Ä–∏–≤–µ—Ç –æ—Ç {author.mention}! :wave:")


    @commands.command(name='ping', description=config.HELP_PING_LONG, help=config.HELP_PING_SHORT) #–ü–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞! !ping
    async def _ping(self, ctx):
        await ctx.channel.purge(limit=1)
        author = ctx.message.author
        before = time.monotonic()
        message = await ctx.send("Pong!")
        ping = (time.monotonic() - before) * 10
        if ping < 60:
            await message.edit(content=f"{author.mention}, —Ç–≤–æ–π –ø–∏–Ω–≥ - '{int(ping)}–º—Å' (:green_circle:)")
        else:
            if ping>61 and ping<100:
                await message.edit(content=f"{author.mention}, —Ç–≤–æ–π –ø–∏–Ω–≥ - '{int(ping)}–º—Å' (:yellow_circle:)")
            else:
                await message.edit(content=f"{author.mention}, —Ç–≤–æ–π –ø–∏–Ω–≥ - '{int(ping)}–º—Å' (:red_circle:)")
        print(f'Ping {int(ping)}ms')



    @commands.command(name='flip', description=config.HELP_FLIP_LONG, help=config.HELP_FLIP_SHORT, aliases=['f'])#–ø–æ–¥–∫–∏–Ω—É—Ç—å –º–æ–Ω–µ—Ç–∫—É !flip (–≤—ã–ø–∞–¥–∞–µ—Ç –û—Ä–µ–ª –∏–ª–∏ –†–µ—à–∫–∞)
    async def _flip(self, ctx):
        await ctx.channel.purge(limit=1)
        author = ctx.message.author
        ch = random.choice(['–û—Ä–µ–ª', '–†–µ—à–∫–∞'])
        
        if ch == '–†–µ—à–∫–∞':
            message = await ctx.send(f"{author.mention}, –≤–∞–º –≤—ã–ø–∞–¥–∞–µ—Ç: ***{ch}***")
            await message.add_reaction('‚ö´')
        else:
            message = await ctx.send(f"{author.mention}, –≤–∞–º –≤—ã–ø–∞–¥–∞–µ—Ç: ***{ch}***")
            await message.add_reaction('‚ö™')


    @commands.command(name='roll', description=config.HELP_ROLL_LONG, help=config.HELP_ROLL_SHORT, aliases=['random'])#–í—ã–±—Ä–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ !roll (0-100) // !role {—á–∏—Å–ª–æ} (0-—á–∏—Å–ª–æ)
    async def _roll(self, ctx, limit=100):
        author = ctx.message.author
        x = limit
        r = random.randint(0, x)
        await ctx.send(f"{author.mention}, –≤–∞—à–µ —á–∏—Å–ª–æ: *{r}*")


    @commands.command(name='direct', description=config.HELP_DIRECT_LONG, help=config.HELP_DIRECT_SHORT, aliases=['dm', 'd', 'ls']) #–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å !dm @nickname {–°–æ–æ–±—â–µ–Ω–∏–µ}
    async def _dm(self, ctx, member: Member, *, text):
        msg=text
        await ctx.channel.purge(limit=1)
        author = ctx.message.author
        await member.send(f"*{author.mention} –Ω–µ–∂–Ω–æ —à–µ–ø–Ω—É–ª –≤–∞–º –Ω–∞ —É—à–∫–æ:* ' {msg} '")


    @commands.command(name='dog', description=' ', brief=' ', aliases=['mem'])
    async def _dog(self, ctx):
        dog = discord.Embed(colour = 0xf57114, title = ':dog:', description = config.MEM_DOG)
        await ctx.send(embed = dog)


    @commands.command()
    async def hack(self, ctx):
        await ctx.channel.purge(limit=1)
        emojis = ['‚úî', '‚ùå']
        i=0
        hack_agree = discord.Embed(colour = 0xf57114, title='üì°HACKINGüì°', description = "–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–∑–ª–æ–º–∞—Ç—å –¥–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä?")
        mg = await ctx.send(embed=hack_agree)
        await mg.add_reaction('‚ùå')
        await mg.add_reaction('‚úî')


        def check(reaction, user):
            return user == ctx.message.author and str(reaction.emoji) in emojis

        while True:
            try:
                reaction, user = await self.bot.wait_for('reaction_add', check=check)
                
                if str(reaction.emoji) == '‚úî':

                    await ctx.channel.purge(limit=1)
                    emb_hack = discord.Embed(colour=0xf57114, title='üì°HACKINGüì°', description=f"–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å –≤–∑–ª–æ–º–∞ —Å–µ—Ä–≤–µ—Ä–∞!")
                    msg = await ctx.send(embed=emb_hack)
                    await asyncio.sleep(2)

                    while i < 100:
                        try:
                            i = i + 1
                            
                            if i !=100:
                                hack_embed = discord.Embed(colour=0xf57114, title="üì°HACKINGüì°", description=f"–í–∑–ª–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–∞ **{i}%**")
                                await msg.edit(embed=hack_embed)
                            elif i>100:
                                hack_embed1 = discord.Embed(colour=0xf57114, title="üì°HACKINGüì°", description=f"–í–∑–ª–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–∞ 100%")
                                await msg.edit(embed=hack_embed1)
                            else:
                                await ctx.channel.purge(limit=1)
                                end_emb= discord.Embed(colour=0xf57114, title="üì°HACKINGüì°", description=f"–°–µ—Ä–≤–µ—Ä –≤–∑–ª–æ–º–∞–Ω!")
                                message = await ctx.send(embed=end_emb)
                                await message.add_reaction('üôà')
                                await message.add_reaction('üôâ')
                                await message.add_reaction('üôä')

                        except:
                            break
                
                else:
                    await ctx.channel.purge(limit=1)
                    cancel_hack = discord.Embed(colour=0xf57114, title='üì°HACKINGüì°', description='–í–∑–ª–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω!')
                    await ctx.send(embed=cancel_hack)
                    break
            except:
                await msg.delete()
                break




    @commands.command(name = 'play', description=config.HELP_YT_LONG, help=config.HELP_YT_SHORT, aliases=['p', 'yt', 'P'])
    async def _play_song_mine(self, ctx, *, track:str):
        track_name=track
        bot_channel = ctx.guild.voice_client.channel
        author_channel = ctx.author.voice.channel
        author_channel_msg = ctx.message.author.voice.channel
        if bot_channel != author_channel:
            await ctx.invoke(self.bot.get_command('changechannel'))
            await ctx.invoke(self.bot.get_command('testplay'), track = track_name)
        elif bot_channel is None:
            await ctx.invoke(self.bot.get_command('connect'))
            await ctx.invoke(self.bot.get_command('testplay'), track = track_name)
        else:
            await ctx.invoke(self.bot.get_command('testplay'), track = track_name)




### –ë–û–õ–¨–®–ò–ï –ë–£–ö–í–´ ###

    @commands.command(name = 'bigletters', description = config.HELP_BL_SHORT, help = config.HELP_BL_LONG, aliases=['bl', 'big', 'biglet'])
    async def _big_letters(self, ctx, *, text):
        dic = {'A':':regional_indicator_a:', 'a':':regional_indicator_a:', 'B':':regional_indicator_b:', 'b':':regional_indicator_b:', 'C':':regional_indicator_c:', 'c':':regional_indicator_c:',
            'D':':regional_indicator_d:', 'd':':regional_indicator_d:', 'E':':regional_indicator_e:', 'e':':regional_indicator_e:', 'F':':regional_indicator_f:', 'f':':regional_indicator_f:',
            'G':':regional_indicator_g:', 'g':':regional_indicator_g:', 'H':':regional_indicator_h:', 'h':':regional_indicator_h:', 'I':':regional_indicator_i:', 'i':':regional_indicator_i:',
            'J':':regional_indicator_j:', 'j':':regional_indicator_j:', 'K':':regional_indicator_k:', 'k':':regional_indicator_k:', 'L':':regional_indicator_l:', 'l':':regional_indicator_l:',
            'M':':regional_indicator_m:', 'm':':regional_indicator_m:', 'N':':regional_indicator_n:', 'n':':regional_indicator_n:', 'O':':regional_indicator_o:', 'o':':regional_indicator_o:',
            'P':':regional_indicator_p:', 'p':':regional_indicator_p:', 'Q':':regional_indicator_q:', 'q':':regional_indicator_q:', 'R':':regional_indicator_r:', 'r':':regional_indicator_r:',
            'S':':regional_indicator_s:', 's':':regional_indicator_s:', 'T':':regional_indicator_t:', 't':':regional_indicator_t:', 'U':':regional_indicator_u:', 'u':':regional_indicator_u:',
            'V':':regional_indicator_v:', 'v':':regional_indicator_v:', 'W':':regional_indicator_w:', 'w':':regional_indicator_w:', 'X':':regional_indicator_x:', 'x':':regional_indicator_x:',
            'Y':':regional_indicator_y:', 'y':':regional_indicator_y:', 'Z':':regional_indicator_z:', 'z':':regional_indicator_z:',
            '0':':zero:', '1':':one:', '2':':two:', '3':':three:', '4':':four:', '5':':five:', '6':':six:', '7':':seven:', '8':':eight:', '9':':nine:', ' ':'  '}
    
        alphabet = ['A', 'a', 'B', 'b', 'C', 'c', 'D', 'd', 'E', 'e', 'F', 'f', 'G', 'g', 'H', 'h', 'I', 'i', 'J', 'j', 
                    'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O', 'o', 'P', 'p', 'Q', 'q', 'R', 'r', 'S', 's', 'T', 't', 'U', 'u', 
                    'V', 'v', 'W', 'w', 'X', 'x', 'Y', 'y', 'Z', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ']

        await ctx.channel.purge(limit=1)
        st = str(text)
        result = str()

        len_st = len(st)
        for i in range(0, len_st):
            if st[i] in alphabet:
                simb = dic[st[i]]
            else:
                simb = st[i]
            result = result + simb
        await ctx.send(result)

### –ü–û–¶–ï–õ–£–ô ###

    @commands.command(name = 'kiss', desription = config.HELP_KISS_SHORT, help = config.HELP_KISS_LONG, aliases = ['kisses', 'cmok', '—Ü–æ–º–∫', '—Ü–µ–ª—É—é', '–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å'])
    async def _kiss(self, ctx, member: Member):

        state_imgs = [
        "https://i.gifer.com/1JN.gif",
        "https://i.gifer.com/1Ve.gif",
        "https://i.gifer.com/Aq.gif",
        "https://i.gifer.com/T0lE.gif",
        "https://i.gifer.com/PCUi.gif",
        "https://i.gifer.com/2uEt.gif",
        "https://i.gifer.com/2lte.gif",
        "https://i.gifer.com/T0lE.gif",
        "https://i.gifer.com/XrqL.gif",
        "https://i.gifer.com/gZ2.gif",
        "https://i.gifer.com/55UX.gif",
        "https://i.gifer.com/24jg.gif",
        "https://i.gifer.com/3h0f.gif",
        "https://i.gifer.com/FChS.gif",
        "https://i.gifer.com/36KV.gif",
        "https://cdn.weeb.sh/images/rJ6PWohA-.gif",
        "https://i.gifer.com/9Gd2.gif"
        ]

        imgs = []
        
        await ctx.channel.purge(limit=1)
        author = ctx.message.author

        print ("–°–ø–∏—Å–æ–∫ imgs: ")
        print (imgs)
        print ("–°–ø–∏—Å–æ–∫ state_imgs: ")
        print (state_imgs)

        imgs.extend(state_imgs)
        print ("–°–ø–∏—Å–æ–∫ imgs –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ")
        print (imgs)

        elements_in_imgs = len(imgs)
        print (f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ imgs = {elements_in_imgs}")

        if elements_in_imgs > 0:

            print("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ—Ç–æ–≤ > 0")

            if author == member:
                img_url = random.choice(imgs)
                emb = discord.Embed(colour=0xf57114, description=f"**{author.mention}** –ø–æ—Ü–µ–ª–æ–≤–∞–ª —Å–∞–º —Å–µ–±—è! –ö–∞–∫–æ–≤ —ç–≥–æ–∏—Å—Çüòè")
                emb.set_image(url = img_url)
                imgs.remove(img_url)
                await ctx.send(embed = emb)
            else:
                img_url = random.choice(imgs)
                emb = discord.Embed(colour=0xf57114, description=f"**{author.mention}** —Ü–µ–ª—É–µ—Ç **{member.mention}**")
                emb.set_image(url = img_url)
                imgs.remove(img_url)
                await ctx.send(embed = emb)
        else:
            print ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ = 0")
            imgs.extend(state_imgs)
            print (f"—Å–ø–∏—Å–æ–∫ imgs –ø–æ—Å–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ Else: {imgs}")

"""
    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload):

        Channel = self.bot.get_channel(payload.channel_id)
        message = await Channel.fetch_message(payload.message_id)
        x = self.bot.get_channel(837800327990214666)
        guild = self.bot.get_guild(payload.guild_id)
        reaction = discord.utils.get(message.reactions, emoji=payload.emoji.name)
        New = discord.utils.get(guild.roles, id = 838180435929727024)
        Meeting_chat = self.bot.get_channel(837801306721747015)

        if x != Channel:
            print("wrong channel")
            return

        #–º—É–∂—á–∏–Ω—ã
        elif payload.emoji.name == "üï∫":
            Man = discord.utils.get(guild.roles, name = '–ú—É–∂—á–∏–Ω—ã')
            await payload.member.add_roles(Man)
            print("–í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å:")
            print(Man)
            await payload.member.remove_roles(New)
            print("–£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å:")
            print(New)

        #–î–µ–≤—É—à–∫–∏
        elif payload.emoji.name == "üíÉ":
            Woman = discord.utils.get(guild.roles, name  = '–î–µ–≤—É—à–∫–∏')
            await payload.member.add_roles(Woman)
            print("–í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å:")
            print(Woman)
            await payload.member.remove_roles(New)
            print("–£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å:")
            print(New)
            #await Meeting_chat.send(config.MEETING_CHANNEL_PHRASE + f"**{payload.member}**")

        #–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ä–µ–∞–∫—Ü–∏—è
        else:
            await reaction.remove(payload.member)
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ä–µ–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞")
            return

"""
"""
    @commands.command()
    async def _meeting(self, ctx):
        Channel = self.bot.get_channel(837800327990214666)
        Text = discord.Embed(color=0xf57114, title='**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π!**', description=f'–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —É –Ω–∞—Å –¥–æ–º–∞!\n\n–ó–¥–µ—Å—å –º—ã:\n:thought_balloon: | –û–±—â–∞–µ–º—Å—è\n:video_game: | –ò–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—ã\n:film_frames: | –°–º–æ—Ç—Ä–∏–º –≤–∏–¥–µ–æ\n:microphone2: | –°—Ç—Ä–∏–º–∏–º\n:headphones: | –°–ª—É—à–∞–µ–º –º—É–∑—ã–∫—É\n\n–í –æ–±—â–µ–º, –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–æ–¥–∏–º –≤—Ä–µ–º—è.\n\n–ü—Ä–µ–∂–¥–µ, —á–µ–º –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª!\n\n:man_dancing: - –ú—É–∂—á–∏–Ω–∞\n:dancer: - –î–µ–≤—É—à–∫–∞\n\n*(–ù–∞–∂–º–∏ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é)*')
        Moji = await ctx.send(embed = Text)
        await Moji.add_reaction('üï∫')
        await Moji.add_reaction('üíÉ')
"""

"""
    @commands.command(pass_context=True)
    async def get_roles(ctx):
        all_roles = []
        for role in ctx.guild.roles:
            all_roles.append(role.name)
        all_roles.reverse()# to make it higher first 
        print(all_roles)
"""


def setup(bot):
    bot.add_cog(MyCommands(bot))

